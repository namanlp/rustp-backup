import scStyled, { css as css$1, createGlobalStyle as createGlobalStyle$1, ThemeContext, ThemeProvider } from 'styled-components';
export { ServerStyleSheet, StyleSheetConsumer, StyleSheetContext, StyleSheetManager, ThemeConsumer, ThemeContext, ThemeProvider, isStyledComponent, keyframes, withTheme } from 'styled-components';
import { flattenStrings } from '@xstyled/util';
import { transform, createBox, createColorModeProvider, createColorStyles, useThemeBreakpoints, useThemeBreakpoint, useThemeUp, useThemeDown } from '@xstyled/core';
export { getColorModeInitScriptElement, getColorModeInitScriptTag, useColorMode, useViewportWidth } from '@xstyled/core';
import _taggedTemplateLiteralLoose from '@babel/runtime/helpers/esm/taggedTemplateLiteralLoose';
import React from 'react';
import { createSystemComponent } from '@xstyled/system';
export * from '@xstyled/system';

/* eslint-disable no-continue, no-loop-func, no-cond-assign */
function css() {
  var scCssArgs = css$1.apply(void 0, arguments);
  var flattenedArgs = flattenStrings(scCssArgs);
  return flattenedArgs.map(transform);
}

var createGlobalStyle = function createGlobalStyle() {
  return createGlobalStyle$1([css.apply(void 0, arguments)]);
};

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function getCreateStyle(baseCreateStyle) {
  var createStyle = function createStyle() {
    return baseCreateStyle(_templateObject(), css.apply(void 0, arguments));
  };

  createStyle.attrs = function (attrs) {
    var nextCreateStyle = baseCreateStyle.attrs(attrs);
    return getCreateStyle(nextCreateStyle);
  };

  createStyle.withConfig = function (config) {
    var nextCreateStyle = baseCreateStyle.withConfig(config);
    return getCreateStyle(nextCreateStyle);
  };

  return createStyle;
}

function styled(component) {
  return getCreateStyle(scStyled(component));
}
var InnerBox = /*#__PURE__*/createSystemComponent(React);
var Box = /*#__PURE__*/styled(InnerBox)(createBox);
styled.box = /*#__PURE__*/styled(Box);
Object.keys(scStyled).forEach(function (key) {
  styled[key] = styled(key);
  styled[key + "Box"] = styled(Box.withComponent(createSystemComponent(React, key)));
});

function _templateObject$1() {
  var data = _taggedTemplateLiteralLoose(["", ""]);

  _templateObject$1 = function _templateObject() {
    return data;
  };

  return data;
}
var ColorModeStyle = /*#__PURE__*/createGlobalStyle$1( /*#__PURE__*/_templateObject$1(), function (p) {
  return createColorStyles(p.theme, {
    targetSelector: p.targetSelector
  });
});
var ColorModeProvider = /*#__PURE__*/createColorModeProvider({
  ThemeContext: ThemeContext,
  ThemeProvider: ThemeProvider,
  ColorModeStyle: ColorModeStyle
});

function useTheme() {
  return React.useContext(ThemeContext);
}

function useBreakpoints() {
  return useThemeBreakpoints(useTheme());
}
function useBreakpoint() {
  return useThemeBreakpoint(useTheme());
}
function useUp(key) {
  return useThemeUp(useTheme(), key);
}
function useDown(key) {
  return useThemeDown(useTheme(), key);
}

export default styled;
export { Box, ColorModeProvider, createGlobalStyle, css, useBreakpoint, useBreakpoints, useDown, useTheme, useUp };
