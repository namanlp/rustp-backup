{"version":3,"file":"index.cjs","sources":["../src/colorModes.ts","../src/theme.ts","../src/breakpoints.ts","../src/preflight.ts","../src/createCssFunction.ts","../src/scStyled.ts","../src/createStyled.ts","../src/createX.ts","../src/createCreateGlobalStyle.ts","../src/create.ts","../src/index.ts"],"sourcesContent":["import {\n  createGlobalStyle,\n  ThemeContext,\n  ThemeProvider,\n} from 'styled-components'\nimport { createColorModeProvider, createColorStyles } from '@xstyled/core'\n\nconst ColorModeStyle = createGlobalStyle`${(p: {\n  theme: any\n  targetSelector: string\n}) => createColorStyles(p.theme, { targetSelector: p.targetSelector })}`\n\nexport const ColorModeProvider = createColorModeProvider({\n  ThemeContext,\n  ThemeProvider,\n  ColorModeStyle,\n})\n\nexport {\n  useColorMode,\n  getColorModeInitScriptElement,\n  getColorModeInitScriptTag,\n} from '@xstyled/core'\n","import { useContext, ContextType } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { createUseGetter } from '@xstyled/core'\nimport { th } from '@xstyled/system'\n\nexport const useTheme = (): ContextType<typeof ThemeContext> => {\n  return useContext(ThemeContext)\n}\n\nexport const useTh = createUseGetter(th, useTheme)\n\nexport const useAngle = createUseGetter(th.angle, useTheme)\nexport const useAnimation = createUseGetter(th.animation, useTheme)\nexport const useBorder = createUseGetter(th.border, useTheme)\nexport const useBorderColor = createUseGetter(th.borderColor, useTheme)\nexport const useBorderStyle = createUseGetter(th.borderStyle, useTheme)\nexport const useBorderWidth = createUseGetter(th.borderWidth, useTheme)\nexport const useColor = createUseGetter(th.color, useTheme)\nexport const useDuration = createUseGetter(th.duration, useTheme)\nexport const useFont = createUseGetter(th.font, useTheme)\nexport const useFontSize = createUseGetter(th.fontSize, useTheme)\nexport const useFontWeight = createUseGetter(th.fontWeight, useTheme)\nexport const useInset = createUseGetter(th.inset, useTheme)\nexport const useLetterSpacing = createUseGetter(th.letterSpacing, useTheme)\nexport const useLineHeight = createUseGetter(th.lineHeight, useTheme)\nexport const usePercent = createUseGetter(th.percent, useTheme)\nexport const usePx = createUseGetter(th.px, useTheme)\nexport const useRadius = createUseGetter(th.radius, useTheme)\nexport const useRingWidth = createUseGetter(th.ringWidth, useTheme)\nexport const useShadow = createUseGetter(th.shadow, useTheme)\nexport const useSize = createUseGetter(th.size, useTheme)\nexport const useSpace = createUseGetter(th.space, useTheme)\nexport const useTimingFunction = createUseGetter(th.timingFunction, useTheme)\nexport const useTransform = createUseGetter(th.transform, useTheme)\nexport const useTransition = createUseGetter(th.transition, useTheme)\nexport const useTransitionProperty = createUseGetter(\n  th.transitionProperty,\n  useTheme,\n)\nexport const useZIndex = createUseGetter(th.zIndex, useTheme)\n","import {\n  useThemeScreens,\n  useThemeBreakpoint,\n  useThemeUp,\n  useThemeDown,\n} from '@xstyled/core'\nimport { Screens } from '@xstyled/system'\nimport { useTheme } from './theme'\n\nexport { useViewportWidth } from '@xstyled/core'\n\nexport const useScreens = (): Screens => {\n  return useThemeScreens(useTheme())\n}\n\nexport const useBreakpoint = (): string | null => {\n  return useThemeBreakpoint(useTheme())\n}\n\nexport const useUp = (key: string | number): boolean => {\n  return useThemeUp(useTheme(), key)\n}\n\nexport const useDown = (key: string | number): boolean => {\n  return useThemeDown(useTheme(), key)\n}\n","import { createGlobalStyle } from 'styled-components'\nimport { getPreflightStyles } from '@xstyled/system'\n\nexport const Preflight = createGlobalStyle(({ theme }) =>\n  getPreflightStyles(theme),\n)\n","/* eslint-disable no-continue, no-loop-func, no-cond-assign */\nimport {\n  css as scCss,\n  FlattenSimpleInterpolation,\n  ThemedCssFunction,\n} from 'styled-components'\nimport { StyleGenerator, Theme } from '@xstyled/system'\nimport { flattenStrings } from '@xstyled/util'\nimport { createTransform } from '@xstyled/core'\n\nexport type XCSSFunction = ThemedCssFunction<Theme>\n\nexport const createCssFunction = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XCSSFunction => {\n  const transform = createTransform(generator)\n  return ((...args: Parameters<XCSSFunction>) => {\n    const scCssArgs = scCss(...args)\n    const flattenedArgs = flattenStrings(scCssArgs as any[])\n    return flattenedArgs.map(transform) as FlattenSimpleInterpolation\n  }) as XCSSFunction\n}\n","import styled from 'styled-components'\n\n// Provide interop since `styled-components` does not work out of the box with ESM\nexport const scStyled =\n  // @ts-ignore\n  typeof styled === 'function' ? styled : styled.default\n","/* eslint-disable no-continue, no-loop-func, no-cond-assign */\nimport type { ElementType } from 'react'\nimport { BoxElements } from '@xstyled/core'\nimport { string } from '@xstyled/util'\nimport { StyleGenerator, StyleGeneratorProps, Theme } from '@xstyled/system'\nimport {\n  StyledConfig,\n  ThemedBaseStyledInterface,\n  ThemedStyledFunction,\n} from 'styled-components'\nimport { scStyled } from './scStyled'\nimport { createCssFunction, XCSSFunction } from './createCssFunction'\n\nconst getCreateStyle = (\n  baseCreateStyle: ThemedStyledFunction<any, any>,\n  css: XCSSFunction,\n  generator?: StyleGenerator,\n) => {\n  const createStyle = (...args: Parameters<typeof css>) =>\n    // @ts-ignore\n    baseCreateStyle`${css(...args)}${generator}`\n  createStyle.attrs = (attrs: Parameters<typeof baseCreateStyle.attrs>[0]) =>\n    getCreateStyle(baseCreateStyle.attrs(attrs), css, generator)\n  createStyle.withConfig = (config: StyledConfig<any>) =>\n    getCreateStyle(baseCreateStyle.withConfig(config), css, generator)\n  return createStyle\n}\n\ntype BoxStyledTags<TProps extends object> = {\n  [Key in keyof BoxElements]: ThemedStyledFunction<\n    BoxElements[Key],\n    Theme,\n    TProps\n  >\n}\n\nexport interface XStyled<TGen extends StyleGenerator>\n  extends ThemedBaseStyledInterface<Theme>,\n    BoxStyledTags<StyleGeneratorProps<TGen>> {}\n\nconst createShouldForwardProp = (\n  generator: StyleGenerator,\n): ((\n  prop: string | number | symbol,\n  defaultValidatorFn: (prop: string | number | symbol) => boolean,\n  elementToBeCreated?: ElementType,\n) => boolean) => {\n  const propSet = new Set<string>(generator.meta.props)\n  return (\n    prop: string | number | symbol,\n    defaultValidatorFn: (prop: string | number | symbol) => boolean,\n    elementToBeCreated?: ElementType,\n  ) => {\n    if (string(prop) && propSet.has(prop)) {\n      return false\n    }\n    if (typeof elementToBeCreated === 'string') {\n      // We must test elementToBeCreated so we can pass through props for <x.div\n      // as={Component} />. However elementToBeCreated isn't available until\n      // styled-components 5.2.4 or 6, and in the meantime will be undefined.\n      // This means that HTML elements could get unwanted props, but ultimately\n      // this is a bug in the caller, because why are they passing unwanted\n      // props?\n      return defaultValidatorFn(prop)\n    }\n    return true\n  }\n}\n\nexport const createBaseStyled = <TGen extends StyleGenerator>(\n  css: XCSSFunction,\n  generator?: TGen,\n): XStyled<TGen> => {\n  const config = generator\n    ? {\n        shouldForwardProp: createShouldForwardProp(generator),\n      }\n    : {}\n  return ((component: Parameters<typeof scStyled>[0]) => {\n    const baseStyled = scStyled(component)\n    return getCreateStyle(\n      config ? baseStyled.withConfig(config) : baseStyled,\n      css,\n      generator,\n    )\n  }) as XStyled<TGen>\n}\n\nexport const createStyled = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XStyled<TGen> => {\n  const css = createCssFunction(generator)\n  const styled = createBaseStyled(css)\n  const xstyled = createBaseStyled(css, generator)\n  styled.box = xstyled('div')\n  Object.keys(scStyled).forEach((key) => {\n    // @ts-ignore\n    styled[key] = styled(key)\n    // @ts-ignore\n    styled[`${key}Box`] = xstyled(key)\n  })\n  return styled\n}\n","/* eslint-disable no-continue, no-loop-func, no-cond-assign */\nimport { StyledComponent, DefaultTheme } from 'styled-components'\nimport { scStyled } from './scStyled'\nimport { StyleGenerator, StyleGeneratorProps } from '@xstyled/system'\nimport { createBaseStyled } from './createStyled'\nimport { createCssFunction } from './createCssFunction'\n\ntype JSXElementKeys = keyof JSX.IntrinsicElements\n\ntype SafeIntrinsicElement<T extends keyof JSX.IntrinsicElements> = (\n  props: Omit<JSX.IntrinsicElements[T], 'color'>,\n) => React.ReactElement<any, T>\n\nexport type X<TGen extends StyleGenerator> = {\n  [Key in JSXElementKeys]: StyledComponent<\n    SafeIntrinsicElement<Key>,\n    DefaultTheme,\n    StyleGeneratorProps<TGen>,\n    'color'\n  >\n}\n\nexport const createX = <TGen extends StyleGenerator>(\n  generator: TGen,\n): X<TGen> => {\n  const xstyled = createBaseStyled(createCssFunction(generator), generator)\n  const x = {} as X<TGen>\n  Object.keys(scStyled).forEach((tag) => {\n    // @ts-ignore\n    x[tag] = xstyled(tag)``\n  })\n  return x\n}\n","import { createGlobalStyle as scCreateGlobalStyle } from 'styled-components'\nimport { StyleGenerator } from '@xstyled/system'\nimport { createCssFunction } from './createCssFunction'\n\nexport type XCreateGlobalStyle = typeof scCreateGlobalStyle\n\nexport const createCreateGlobalStyle = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XCreateGlobalStyle => {\n  const css = createCssFunction(generator)\n  return ((\n    ...args: Parameters<XCreateGlobalStyle>\n  ): ReturnType<XCreateGlobalStyle> =>\n    scCreateGlobalStyle([\n      // @ts-ignore\n      css(...args),\n    ])) as XCreateGlobalStyle\n}\n","import { StyleGenerator } from '@xstyled/system'\nimport { createCssFunction, XCSSFunction } from './createCssFunction'\nimport { createX, X } from './createX'\nimport { createStyled, XStyled } from './createStyled'\nimport {\n  createCreateGlobalStyle,\n  XCreateGlobalStyle,\n} from './createCreateGlobalStyle'\n\ninterface XStyledSet<TGen extends StyleGenerator> {\n  css: XCSSFunction\n  x: X<TGen>\n  styled: XStyled<TGen>\n  createGlobalStyle: XCreateGlobalStyle\n}\n\nexport const createCss = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XStyledSet<TGen> => {\n  return {\n    css: createCssFunction(generator),\n    x: createX(generator),\n    styled: createStyled(generator),\n    createGlobalStyle: createCreateGlobalStyle(generator),\n  }\n}\n","export {\n  isStyledComponent,\n  keyframes,\n  ServerStyleSheet,\n  StyleSheetManager,\n  ThemeConsumer,\n  ThemeContext,\n  ThemeProvider,\n  withTheme,\n} from 'styled-components'\nexport * from './colorModes'\nexport * from './theme'\nexport * from './breakpoints'\nexport * from './preflight'\nexport * from '@xstyled/system'\nexport * from './create'\n\n// Create and export default system\nimport { system } from '@xstyled/system'\nimport { createCss } from './create'\n\nconst { css, styled, x, createGlobalStyle } = createCss(system)\nexport { css, styled, styled as default, x, createGlobalStyle }\n"],"names":["createGlobalStyle","createColorStyles","createColorModeProvider","ThemeContext","ThemeProvider","useContext","createUseGetter","th","useThemeScreens","useThemeBreakpoint","useThemeUp","useThemeDown","getPreflightStyles","createTransform","scCss","flattenStrings","styled","string","scCreateGlobalStyle","system"],"mappings":"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"}