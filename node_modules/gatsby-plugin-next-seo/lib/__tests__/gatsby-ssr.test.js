"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _gatsbySsr = require("../gatsby-ssr");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

jest.mock('../ssr-context');

var getActions = function getActions() {
  var actions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return _objectSpread({
    setHeadComponents: jest.fn()
  }, actions);
};

describe('onRenderBody', function () {
  it('sets head components', function () {
    var actions = getActions();
    (0, _gatsbySsr.onRenderBody)(actions);
    expect(actions.setHeadComponents).toHaveBeenCalledTimes(1);
    expect(actions.setHeadComponents).toHaveBeenCalledWith(['title-component', 'link-component', 'meta-component', 'noscript-component', 'script-component', 'style-component', 'base-component']);
  });
  it('sets html attributes', function () {
    var actions = getActions({
      setHtmlAttributes: jest.fn()
    });
    (0, _gatsbySsr.onRenderBody)(actions);
    expect(actions.setHeadComponents).toHaveBeenCalledTimes(1);
    expect(actions.setHtmlAttributes).toHaveBeenCalledWith('html-attributes-component');
  });
  it('sets body attributes', function () {
    var actions = getActions({
      setBodyAttributes: jest.fn()
    });
    (0, _gatsbySsr.onRenderBody)(actions);
    expect(actions.setBodyAttributes).toHaveBeenCalledTimes(1);
    expect(actions.setBodyAttributes).toHaveBeenCalledWith('body-attributes-component');
  });
});