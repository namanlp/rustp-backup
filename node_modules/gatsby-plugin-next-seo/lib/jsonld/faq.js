"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FAQJsonLd = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _jsonld = require("./jsonld");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var transformMainEntity = function transformMainEntity(questions) {
  return questions.map(function (_ref) {
    var question = _ref.question,
        answer = _ref.answer;
    return {
      '@type': 'Question',
      acceptedAnswer: {
        '@type': 'Answer',
        text: answer
      },
      name: question
    };
  });
};
/**
 * A Frequently Asked Question (FAQ) page contains a list of questions and
 * answers pertaining to a particular topic.
 *
 * @remarks
 *
 * Properly marked up FAQ pages may be eligible to have a rich result on Search
 * and voice assistants.
 *
 * ```tsx
 * import React from 'react';
 * import { FAQJsonLd } from 'gatsby-plugin-next-seo';
 *
 * export default () => (
 *   <>
 *     <FAQJsonLd mainEntity={[{ question: 'What?', answer: 'Stand' }, { question:
 *       'How?', answer: 'Effort' }, { question: 'Why?', answer: 'Peace' },
 *       ]}
 *     />
 *
 *     <h1>What?</h1>
 *     <p>Stand</p>
 *
 *     <h1>How?</h1>
 *     <p>Effort</p>
 *
 *     <h1>Why?</h1>
 *     <p>Peace</p>
 *   </>
 * );
 * ```
 *
 * @public
 */


var FAQJsonLd = function FAQJsonLd(_ref2) {
  var mainEntity = _ref2.questions,
      _ref2$overrides = _ref2.overrides,
      overrides = _ref2$overrides === void 0 ? {} : _ref2$overrides,
      _ref2$defer = _ref2.defer,
      defer = _ref2$defer === void 0 ? false : _ref2$defer;

  var json = _objectSpread({
    '@context': 'https://schema.org',
    '@type': 'FAQPage',
    mainEntity: transformMainEntity(mainEntity)
  }, overrides);

  return /*#__PURE__*/_react["default"].createElement(_jsonld.JsonLd, {
    defer: defer,
    json: json
  });
};

exports.FAQJsonLd = FAQJsonLd;