{"version":3,"file":"index.modern.mjs","sources":["../src/collected-scripts-by-page.tsx","../src/request-idle-callback-shim.ts","../src/gatsby-script.tsx"],"sourcesContent":["import { ScriptProps } from \"./gatsby-script\"\n\nconst _collectedScriptsByPage = new Map()\n\nexport const collectedScriptsByPage = {\n  get(pathname: string): Array<ScriptProps> {\n    return _collectedScriptsByPage.get(pathname) || []\n  },\n  set(pathname: string, collectedScript: ScriptProps): void {\n    const currentCollectedScripts = _collectedScriptsByPage.get(pathname) || []\n    currentCollectedScripts.push(collectedScript)\n    _collectedScriptsByPage.set(pathname, currentCollectedScripts)\n  },\n  delete(pathname: string): void {\n    _collectedScriptsByPage.delete(pathname)\n  },\n}\n","// https://developer.chrome.com/blog/using-requestidlecallback/#checking-for-requestidlecallback\n// https://github.com/vercel/next.js/blob/canary/packages/next/client/request-idle-callback.ts\n\nexport const requestIdleCallback =\n  (typeof self !== `undefined` &&\n    self.requestIdleCallback &&\n    self.requestIdleCallback.bind(window)) ||\n  function (cb: IdleRequestCallback): number {\n    const start = Date.now()\n    return setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start))\n        },\n      })\n    }, 1) as unknown as number\n  }\n","import React, { useEffect } from \"react\"\nimport { collectedScriptsByPage } from \"./collected-scripts-by-page\"\nimport type { ReactElement, ScriptHTMLAttributes } from \"react\"\nimport { requestIdleCallback } from \"./request-idle-callback-shim\"\nimport { Location, useLocation } from \"@gatsbyjs/reach-router\"\n\nexport enum ScriptStrategy {\n  postHydrate = `post-hydrate`,\n  idle = `idle`,\n  offMainThread = `off-main-thread`,\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface ScriptProps\n  extends Omit<ScriptHTMLAttributes<HTMLScriptElement>, `onLoad` | `onError`> {\n  id?: string\n  strategy?: ScriptStrategy | `post-hydrate` | `idle` | `off-main-thread`\n  children?: string\n  onLoad?: (event: Event) => void\n  onError?: (event: ErrorEvent) => void\n  forward?: Array<string>\n}\n\nconst handledProps = new Set([\n  `src`,\n  `strategy`,\n  `dangerouslySetInnerHTML`,\n  `children`,\n  `onLoad`,\n  `onError`,\n])\n\n// Used for de-duplication\nexport const scriptCache: Set<string> = new Set()\nexport const scriptCallbackCache: Map<\n  string,\n  {\n    load?: {\n      callbacks?: Array<(event: Event) => void>\n      event?: Event | undefined\n    }\n    error?: {\n      callbacks?: Array<(event: ErrorEvent) => void>\n      event?: ErrorEvent | undefined\n    }\n  }\n> = new Map()\n\n// Same pattern is used in Gatsby Link\nfunction GatsbyScriptLocationWrapper(props: ScriptProps): JSX.Element {\n  return <Location>{(): JSX.Element => <GatsbyScript {...props} />}</Location>\n}\n\nfunction GatsbyScript(props: ScriptProps): ReactElement | null {\n  const { src, strategy = ScriptStrategy.postHydrate } = props || {}\n\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    let details: IInjectedScriptDetails | null\n\n    switch (strategy) {\n      case ScriptStrategy.postHydrate:\n        details = injectScript(props)\n        break\n      case ScriptStrategy.idle:\n        requestIdleCallback(() => {\n          details = injectScript(props)\n        })\n        break\n      case ScriptStrategy.offMainThread:\n        {\n          const attributes = resolveAttributes(props)\n          collectedScriptsByPage.set(pathname, attributes)\n        }\n        break\n    }\n\n    return (): void => {\n      const { script, loadCallback, errorCallback } = details || {}\n\n      if (loadCallback) {\n        script?.removeEventListener(`load`, loadCallback)\n      }\n\n      if (errorCallback) {\n        script?.removeEventListener(`error`, errorCallback)\n      }\n\n      script?.remove()\n    }\n  }, [])\n\n  if (strategy === ScriptStrategy.offMainThread) {\n    const inlineScript = resolveInlineScript(props)\n    const attributes = resolveAttributes(props)\n\n    if (typeof window === `undefined`) {\n      collectedScriptsByPage.set(pathname, attributes)\n    }\n\n    if (inlineScript) {\n      return (\n        <script\n          type=\"text/partytown\"\n          data-strategy={strategy}\n          crossOrigin=\"anonymous\"\n          {...attributes}\n          dangerouslySetInnerHTML={{ __html: resolveInlineScript(props) }}\n        />\n      )\n    }\n    return (\n      <script\n        type=\"text/partytown\"\n        src={proxyPartytownUrl(src)}\n        data-strategy={strategy}\n        crossOrigin=\"anonymous\"\n        {...attributes}\n      />\n    )\n  }\n\n  return null\n}\n\ninterface IInjectedScriptDetails {\n  script: HTMLScriptElement | null\n  loadCallback: (event: Event) => void\n  errorCallback: (event: ErrorEvent) => void\n}\n\nfunction injectScript(props: ScriptProps): IInjectedScriptDetails | null {\n  const {\n    id,\n    src,\n    strategy = ScriptStrategy.postHydrate,\n    onLoad,\n    onError,\n  } = props || {}\n\n  const scriptKey = id || src\n\n  const callbackNames = [`load`, `error`]\n\n  const currentCallbacks = {\n    load: onLoad,\n    error: onError,\n  }\n\n  if (scriptKey) {\n    /**\n     * If a duplicate script is already loaded/errored, we replay load/error callbacks with the original event.\n     * If it's not yet loaded/errored, keep track of callbacks so we can call load/error callbacks for each when the event occurs.\n     */\n    for (const name of callbackNames) {\n      if (currentCallbacks?.[name]) {\n        const cachedCallbacks = scriptCallbackCache.get(scriptKey) || {}\n        const { callbacks = [] } = cachedCallbacks?.[name] || {}\n        callbacks.push(currentCallbacks?.[name])\n\n        if (cachedCallbacks?.[name]?.event) {\n          currentCallbacks?.[name]?.(cachedCallbacks?.[name]?.event)\n        } else {\n          scriptCallbackCache.set(scriptKey, {\n            ...cachedCallbacks,\n            [name]: {\n              callbacks,\n            },\n          })\n        }\n      }\n    }\n\n    // Avoid injecting duplicate scripts into the DOM\n    if (scriptCache.has(scriptKey)) {\n      return null\n    }\n  }\n\n  const inlineScript = resolveInlineScript(props)\n  const attributes = resolveAttributes(props)\n\n  const script = document.createElement(`script`)\n\n  if (id) {\n    script.id = id\n  }\n\n  script.dataset.strategy = strategy\n\n  for (const [key, value] of Object.entries(attributes)) {\n    script.setAttribute(key, value)\n  }\n\n  if (inlineScript) {\n    script.textContent = inlineScript\n  }\n\n  if (src) {\n    script.src = src\n  }\n\n  const wrappedCallbacks: Record<string, (event: Event | ErrorEvent) => void> =\n    {}\n\n  if (scriptKey) {\n    // Add listeners on injected scripts so events are cached for use in de-duplicated script callbacks\n    for (const name of callbackNames) {\n      const wrappedEventCallback = (event: Event | ErrorEvent): void =>\n        onEventCallback(event, scriptKey, name)\n      script.addEventListener(name, wrappedEventCallback)\n      wrappedCallbacks[`${name}Callback`] = wrappedEventCallback\n    }\n\n    scriptCache.add(scriptKey)\n  }\n\n  document.body.appendChild(script)\n\n  return {\n    script,\n    loadCallback: wrappedCallbacks.loadCallback,\n    errorCallback: wrappedCallbacks.errorCallback,\n  }\n}\n\nfunction resolveInlineScript(props: ScriptProps): string {\n  const { dangerouslySetInnerHTML, children = `` } = props || {}\n  const { __html: dangerousHTML = `` } = dangerouslySetInnerHTML || {}\n  return dangerousHTML || children\n}\n\nfunction resolveAttributes(props: ScriptProps): Record<string, string> {\n  const attributes: Record<string, string> = {}\n\n  for (const [key, value] of Object.entries(props)) {\n    if (handledProps.has(key)) {\n      continue\n    }\n    attributes[key] = value\n  }\n\n  return attributes\n}\n\nfunction proxyPartytownUrl(url: string | undefined): string | undefined {\n  if (!url) {\n    return undefined\n  }\n  return `/__third-party-proxy?url=${encodeURIComponent(url)}`\n}\n\nfunction onEventCallback(\n  event: Event | ErrorEvent,\n  scriptKey: string,\n  eventName: string\n): void {\n  const cachedCallbacks = scriptCallbackCache.get(scriptKey) || {}\n\n  for (const callback of cachedCallbacks?.[eventName]?.callbacks || []) {\n    callback(event)\n  }\n\n  scriptCallbackCache.set(scriptKey, { [eventName]: { event } })\n}\n\nexport { GatsbyScriptLocationWrapper as Script }\n"],"names":["get","pathname","set","collectedScript","_collectedScriptsByPage","currentCollectedScripts","push","delete","self","requestIdleCallback","bind","window","cb","Date","now","didTimeout","timeRemaining","max","start","ScriptStrategy","props","React","Location","GatsbyScript","src","strategy","postHydrate","useLocation","useEffect","details","injectScript","idle","offMainThread","resolveAttributes","collectedScriptsByPage","attributes","script","loadCallback","errorCallback","removeEventListener","remove","resolveInlineScript","inlineScript","type","crossOrigin","dangerouslySetInnerHTML","__html","proxyPartytownUrl","id","onLoad","onError","load","error","scriptKey","currentCallbacks","name","scriptCallbackCache","callbacks","cachedCallbacks","_cachedCallbacks$name","event","_cachedCallbacks$name2","scriptCache","has","document","createElement","dataset","key","value","entries","setAttribute","textContent","onEventCallback","addEventListener","wrappedEventCallback","wrappedCallbacks","add","body","appendChild","children","dangerousHTML","handledProps","url","encodeURIComponent","eventName","callback"],"mappings":"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"}