import { As, Props } from "ariakit-utils/types";
import { CompositeSeparatorOptions } from "../composite/composite-separator";
import { SelectState } from "./select-state";
/**
 * A component hook that returns props that can be passed to `Role` or any other
 * Ariakit component to render a separator element for select items.
 * @see https://ariakit.org/components/select
 * @example
 * ```jsx
 * const state = useSelectState();
 * const props = useSelectSeparator({ state });
 * <SelectPopover state={state}>
 *   <SelectItem value="Item 1" />
 *   <Role {...props} />
 *   <SelectItem value="Item 2" />
 *   <SelectItem value="Item 3" />
 * </SelectPopover>
 * ```
 */
export declare const useSelectSeparator: import("ariakit-utils/types").Hook<SelectSeparatorOptions<"hr">>;
/**
 * A component that renders a separator element for select items.
 * @see https://ariakit.org/components/select
 * @example
 * ```jsx
 * const select = useSelectState();
 * <Select state={select} />
 * <SelectPopover state={select}>
 *   <SelectItem value="Item 1" />
 *   <SelectSeparator />
 *   <SelectItem value="Item 2" />
 *   <SelectItem value="Item 3" />
 * </SelectPopover>
 * ```
 */
export declare const SelectSeparator: import("ariakit-utils/types").Component<SelectSeparatorOptions<"hr">>;
export declare type SelectSeparatorOptions<T extends As = "hr"> = Omit<CompositeSeparatorOptions<T>, "state"> & {
    /**
     * Object returned by the `useSelectState` hook. If not provided, the parent
     * `SelectList` or `SelectPopover` components' context will be used.
     */
    state?: SelectState;
};
export declare type SelectSeparatorProps<T extends As = "hr"> = Props<SelectSeparatorOptions<T>>;
