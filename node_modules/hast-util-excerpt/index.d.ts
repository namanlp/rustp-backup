/**
 * Truncate the tree to a certain comment.
 * Returns a copy of the given tree if a comment is found, and `undefined`
 * otherwise.
 *
 * @template {Node} Tree
 * @param {Tree} tree
 * @param {Options} [options]
 * @returns {Tree|undefined}
 */
export function excerpt<Tree extends Node>(
  tree: Tree,
  options?: Options | undefined
): Tree | undefined
export type Root = import('hast').Root
export type Content = import('hast').Content
export type Text = import('hast').Text
export type Node = Root | Content
/**
 * Configuration.
 */
export type Options = {
  /**
   * Comment value to search for.
   */
  comment?: string | undefined
  /**
   * How far to search for the comment before bailing.
   * The goal of this project is to find user-defined explicit excerpts, that
   * are assumed to be somewhat reasonably placed.
   * This option prevents searching giant documents for some comment
   * that probably wonâ€™t be found at the end.
   */
  maxSearchSize?: number | undefined
  /**
   * Nodes to exclude from the resulting tree.
   * These are not counted towards `size`.
   */
  ignore?: import('hast').Content[] | undefined
}
